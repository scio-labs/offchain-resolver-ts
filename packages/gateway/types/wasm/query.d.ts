// Generated by dedot cli

import type { GenericSubstrateApi } from 'dedot/types'
import type { Result, AccountId32Like, Hash, AccountId32 } from 'dedot/codecs'
import type {
  GenericContractQuery,
  GenericContractQueryCall,
  ContractCallOptions,
  GenericContractCallResult,
  ContractCallResult,
} from 'dedot/contracts'
import type {
  WasmRegistrationProxyError,
  InkPrimitivesLangError,
  WasmRegistrationProxyInnerResult,
} from './types'

export interface ContractQuery<ChainApi extends GenericSubstrateApi>
  extends GenericContractQuery<ChainApi> {
  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0x0848523c
   **/
  fundMe: GenericContractQueryCall<
    ChainApi,
    (
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<[], WasmRegistrationProxyError>,
        ContractCallResult<ChainApi>
      >
    >
  >

  /**
   *
   * @param {AccountId32Like} account
   * @param {bigint} balance
   * @param {ContractCallOptions} options
   *
   * @selector 0xe7cda623
   **/
  withdrawFunds: GenericContractQueryCall<
    ChainApi,
    (
      account: AccountId32Like,
      balance: bigint,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<[], WasmRegistrationProxyError>,
        ContractCallResult<ChainApi>
      >
    >
  >

  /**
   *
   * @param {bigint} id
   * @param {string} name
   * @param {AccountId32Like} recipient
   * @param {number} yearsToRegister
   * @param {bigint} maxFees
   * @param {ContractCallOptions} options
   *
   * @selector 0x229b553f
   **/
  register: GenericContractQueryCall<
    ChainApi,
    (
      id: bigint,
      name: string,
      recipient: AccountId32Like,
      yearsToRegister: number,
      maxFees: bigint,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<WasmRegistrationProxyInnerResult, WasmRegistrationProxyError>,
        ContractCallResult<ChainApi>
      >
    >
  >

  /**
   *
   * @param {AccountId32Like} controller
   * @param {boolean} enable
   * @param {ContractCallOptions} options
   *
   * @selector 0xc5e161ea
   **/
  setController: GenericContractQueryCall<
    ChainApi,
    (
      controller: AccountId32Like,
      enable: boolean,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<[], WasmRegistrationProxyError>,
        ContractCallResult<ChainApi>
      >
    >
  >

  /**
   *
   * @param {AccountId32Like} controller
   * @param {ContractCallOptions} options
   *
   * @selector 0x493a701c
   **/
  isController: GenericContractQueryCall<
    ChainApi,
    (
      controller: AccountId32Like,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<boolean, ContractCallResult<ChainApi>>>
  >

  /**
   *
   * @param {bigint} id
   * @param {ContractCallOptions} options
   *
   * @selector 0x6adfbd21
   **/
  isUsedId: GenericContractQueryCall<
    ChainApi,
    (
      id: bigint,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<boolean, ContractCallResult<ChainApi>>>
  >

  /**
   *
   * @param {Hash} codeHash
   * @param {ContractCallOptions} options
   *
   * @selector 0x1345543d
   **/
  upgradeContract: GenericContractQueryCall<
    ChainApi,
    (
      codeHash: Hash,
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<[], ContractCallResult<ChainApi>>>
  >

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0x57b8a8a7
   **/
  getAdmin: GenericContractQueryCall<
    ChainApi,
    (
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<AccountId32, ContractCallResult<ChainApi>>>
  >

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xbcd31d76
   **/
  getPendingAdmin: GenericContractQueryCall<
    ChainApi,
    (
      options?: ContractCallOptions,
    ) => Promise<GenericContractCallResult<AccountId32 | undefined, ContractCallResult<ChainApi>>>
  >

  /**
   *
   * @param {AccountId32Like | undefined} account
   * @param {ContractCallOptions} options
   *
   * @selector 0x107e33ea
   **/
  transferOwnership: GenericContractQueryCall<
    ChainApi,
    (
      account: AccountId32Like | undefined,
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<[], WasmRegistrationProxyError>,
        ContractCallResult<ChainApi>
      >
    >
  >

  /**
   *
   * @param {ContractCallOptions} options
   *
   * @selector 0xb55be9f0
   **/
  acceptOwnership: GenericContractQueryCall<
    ChainApi,
    (
      options?: ContractCallOptions,
    ) => Promise<
      GenericContractCallResult<
        Result<[], WasmRegistrationProxyError>,
        ContractCallResult<ChainApi>
      >
    >
  >
}
